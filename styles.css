
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'AR One Sans', sans-serif; 
  outline: none; 
} /* * é chamado de seletor universal. 
   Esse seletor representa todos os elementos serão afetados pelas definições de estilo ali colocadas. 
   É claro que deve-se ter cuidado ao usar o asterisco, para não afetar configurações padrões de alguns elementos. */


/*padding: A propriedade padding define uma a distância entre o conteúdo de um elemento e suas bordas. 
           É um atalho que evita definir uma distância para cada lado separadamente ( padding-top , padding-right , padding-bottom , padding-left 
           
  box-sizing: A propriedade CSS box-sizing é utilizada para alterar a propriedade padrão da box model, usada para calcular larguras (widths) e alturas (heights) dos elementos. 
           É possível usar essa propriedade para emular o comportamento dos navegadores (browsers) que não suportam corretamente a especificação da propriedade CSS box model.        
           
  font-family:  define qual família de fonte você vai usar. O ideal é trabalhar com fontes conhecidas como Arial, Helvetica, Tahoma e etc.
  
  outline:  é muito útil quando se quer remover o comportamento padrão do browser de adicionar uma borda a um elemento quando ele esta selecionado.
           Ela pode ser útil quando voce quer deixar o design mais limpo. Ela é diferente da propriedade border pois adiciona mais uma borda a um elemento.*/   

img {
    height: 25px;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
} /*Definimos o tamanho das imagens utilzadas na pagina e que estão dentro da pasta img*/

/*opacity: especifica a transparência de um elemento, isto é, o grau no qual o background atrás do elemento é sobreposto.

  transition:  ele permite criar animações sem a necessidade de escrever código JavaScript ou de utilizar recursos externos. 
        Assim, podemos criar inúmeros efeitos de movimento nos elementos e deixar a aplicação web mais interativa e sofisticada.*/


.input-task {
    border: none;
    border-radius: 5px;
    width: 300px;
    height: 40px;
    padding-left: 10px;
} /*Aqui definimos o estilo do campo de tarefas*/

/* border-radius destina-se a definir bordas arredondadas. 
O arredondamento das bordas é feito com declaração de dois valores CSS de medida; o primeiro define o eixo horizontal (rx) de 1/4 de uma elipse e o segundo o eixo vertical (ry).*/

.button-add-task {
    border:none;
    border-radius: 5px;
    height: 40px;
    background-color: #003329;
    color: #ffffff;
    font-size: 17px;
    padding: 0 15px;
    float: right;
    cursor: pointer;
    font-weight: 600;

} /*Definimos o botão Adicionar*/
/*
 Float é uma propriedade CSS que usamos para posicionar algo na tela, seja um elemento em bloco ou em linha.
 Com a propriedade float definida, um elemento pode ser empurrado para esquerda ou para a direita, permitindo que os outros elementos possam organizar em torno dele.
 
 cursor: pointer; onde aparece a mãozinha ao passar com o mouse por cima do campo*/

.button-add-task:hover{
    opacity: 0.8;
} /*Definimos o estilo ao passar com o mouse sobre o botão*/
/*O :hover é uma pseudo-classe CSS que ao ser utilizada ativa estilos em um elemento.
  O :hover possibilita um elemento ter o seu estilo alterado através da ação do usuário, quando o próprio passa o cursor do mouse sobre o elemento.
  Este recurso é bastante utilizado para adicionar funcionalidades de interação em uma aplicação web.*/

.button-add-task:active {
    opacity: 0.6;
} /*Definimos o estilo ao clicar no botão Adicionar*/
/*:active – quando ativamos o elemento. Por exemplo, quando clicamos em um link e não soltamos o botão do mouse.
 Nesse momento, estamos ativando a ação do elemento. Esse estado é ativado também quando navegamos pelos links pelo teclado utilizando o TAB*/

.container {
    background-color: #d1d1d1;
    width: 500px;
    border-radius: 10px;
    padding: 20px;
    margin: 100px auto 0;
} /*Definimos o estilo da caixa por tras, neste exemplo, é  caixa de fundo da tela*/

body {
    background: url("./img/background.png") ;

} /*Aqui definimos a imagem de fundo da tela*/

.list-tasks{
    width: 100%;
    list-style: none;
    margin-top: 30px;
} /*Definimos o estilo das listas*/

.task{
    background-color: #F2F2F2;
    box-shadow: 1px 4px  10px rgba(0,0,0,0.2);
    height: 50px;
    align-items: center;
    justify-content: space-between;
    display: flex;
    border-radius: 5px;   
    margin-bottom: 20px;
    cursor: pointer;
} /*estilo das imagens de conferido e remover*/

.task:hover img{
    opacity: 1;
} /*Definimos o estilo para as imagens conferido e remover aparecer apenas quando passar com mouse por cima*/

.done {
    background-color: #8fac55;
    text-decoration: line-through;
} /*Definimos o estilo que deverá ficar a linha ao marcar o campo, ou seja, clicar em conferir*/
